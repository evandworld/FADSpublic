clc;
clear;
N=20;
Z=[1.9945 1.9794 1.9554 1.9214 1.8777 1.8250 1.7598 1.6867 1.6036 1.5092 1.4076 1.2944 1.1724 1.0399 0.8980 0.7455 0.5850 0.4125 0.2318 0.0399];
Z=Z*1000;
g=9.8;
PO=[100,0;0,2];
H=[1,0];
Q=[10,0;0,10];
R=1;
A=[1,-1;0,1];
B=g*[-0.5;1];
X(:,1)=[1900;10];
L(:,1)=[2000;0];
% for k=1:20
%     L(:,k+1)=A*L(:,k)+B;
% end
Xkf(:,1)=X(:,1);
I=eye(2);
for k=2:20
    %物体下落，受状态方程的驱动
%     X(:,k)=A*X(:,k-1)+W(k);
    %位移传感器对目标进行观测
%     Z(k)=H*X(:,k)+V(k);
    % Kalman滤波
    X_pre=A*Xkf(:,k-1)+B;%状态预测
    P_pre=A*PO*A'+Q;%协方差预测
    K=P_pre*H'/(H*P_pre*H'+R);%计算Kalman增益
    Xkf(:,k)=X_pre+K*(Z(k)-H*X_pre);%状态更新
    PO=(I-K*H)*P_pre;%方差更新
    %误差均方值
    err_P(k,1)=PO(1,1);
    err_P(k,2)=PO(2,2);
end
t=1:20;
plot(t,Z(t),'-k.',t,Xkf(1,t),'-go',t,(Xkf(1,t)-Z(t)),'-r*');
legend('观测位置','Kalman估计位置','滤波后与滤波前的差值')
xlabel('采样时间/s');
ylabel('位置/m');
figure
plot(t,(Xkf(1,t)-Z(t)),'-r*');
legend('滤波后与滤波前的差值');
xlabel('时间/s');
ylabel('位置/m');